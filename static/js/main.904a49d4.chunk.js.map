{"version":3,"sources":["serviceWorker.js","components/Sidebar/Sidebar.jsx","redux/sidebar-reducer.js","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","redux/auth-reducer.js","components/common/preloader/Preloader.jsx","api/api.js","redux/profile-reducer.js","redux/dialog-reducer.js","utils/object-helpers.js","redux/users-reducer.js"],"names":["Boolean","window","location","hostname","match","Sidebar","className","to","initialState","sidebarReducer","state","initialized","appReducer","action","type","reducers","combineReducers","profilePage","profileReducer","messagesPage","dialogReducer","sidebar","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","lazy","ProfileContainer","UsersContainer","HeaderContainer","LoginPage","App","this","props","initializeApp","fallback","Preloader","exact","path","component","Component","AppContainer","withRouter","connect","dispatch","promise","getAuthUserData","Promise","all","then","SamuraiJSApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_USER_DATA","userId","email","login","isAuth","setAuthUserData","payload","a","authAPI","response","data","resultCode","id","getLoginUserData","password","rememberMe","message","messages","length","stopSubmit","_error","getLogoutUserData","logout","alt","src","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","followAPI","unfollow","delete","follow","post","profileAPI","profile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","posts","postsCounter","addPostCreator","newPostText","getUserProfile","setStatus","photos","newPost","likesCount","filter","p","postId","messagesData","dialogsData","name","avatar","addMessageCreator","newMessageText","body","updateObjectsInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setFetching","toggleFollowingProgress","requestUsers","page","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.904a49d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Post is cached for offline use.\" message.\n              console.log('Post is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport \"./Sidebar.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Sidebar = () => {\n    return (\n        <nav className=\"nav\">\n            <ul className=\"nav-list\">\n                <li><NavLink to=\"/profile/\">Profile</NavLink></li>\n                <li><NavLink to=\"/dialogs/\">Messages</NavLink></li>\n                <li><NavLink to=\"/news/\">News</NavLink></li>\n                <li><NavLink to=\"/music/\">Music</NavLink></li>\n                <li><NavLink to=\"/settings/\">Settings</NavLink></li>\n                <li><NavLink to=\"/users/\">Find users</NavLink></li>\n            </ul>\n        </nav>\n    );\n}\nexport default  Sidebar;","let initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n};\nexport default sidebarReducer;","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch(action.type){\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    });\n}\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogReducer from \"./dialog-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.__store__ = store;\n\nexport default store;","import React, {Component, Suspense, lazy} from 'react';\nimport './App.css';\nimport Sidebar from \"./components/Sidebar/Sidebar.jsx\";\nimport {HashRouter, Route, Switch, withRouter} from 'react-router-dom';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport store from \"./redux/redux-store\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\n\nconst DialogsContainer = lazy(() => import('././components/Dialogs/DialogsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'));\nconst HeaderContainer = lazy(() => import('./components/Header/HeaderContainer'));\nconst LoginPage = lazy(() => import('./components/Login/LoginContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <Suspense fallback={<Preloader/>}>\n                    <HeaderContainer/>\n                </Suspense>\n                <Sidebar/>\n                <div className=\"content\">\n                    <Suspense fallback={<Preloader/>}>\n                        <Switch>\n                            <Route exact path=\"/profile/:userId?\" component={ProfileContainer}/>\n                            <Route path=\"/dialogs/\" component={DialogsContainer}/>\n                            <Route path=\"/users/\" component={UsersContainer}/>\n                            <Route path=\"/login/\" component={LoginPage}/>\n                        </Switch>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <HashRouter >\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n};\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.auth();\n\n    if(response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const getLoginUserData = (login, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(login, password, rememberMe);\n\n    if(response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    }\n    else {\n        let message = response.data.messages.length > 0 ? response.data.messages : \"Error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n};\nexport const getLogoutUserData = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if(response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport \"./Preloader.css\";\n\nlet Preloader = (props) => {\n    return <>\n        <div className=\"shadow\"></div>\n        <img alt=\"\" className=\"loading\" src=\"https://icon-library.net/images/ajax-loading-icon/ajax-loading-icon-11.jpg\" />\n    </>\n}\nexport default Preloader;","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"edd374dd-87c3-43d5-9f84-18ff67372711\"\n    }\n});\nexport const usersAPI = {\n    getUsers(currentPage = 1 , pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    }\n};\nexport const followAPI = {\n    unfollow(id) {\n        return instance.delete(`follow/${id}`);\n    },\n    follow(id) {\n        return instance.post(`follow/${id}`);\n    }\n};\nexport const authAPI = {\n    auth() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n};\nexport const profileAPI = {\n    profile(id) {\n        return instance.get(`profile/${id}`)\n    },\n    getStatus(id) {\n        return instance.get(`profile/status/${id}`)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status})\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n        return instance.put(`profile/photo/`, formData, {headers: {\n                \"Content-type\": \"multipart/form-data\"\n            }\n        });\n    }\n};","import {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst SAVE_PHOTOS = 'SAVE_PHOTOS';\n\nlet initialState = {\n    posts: [],\n    profile: null,\n    status: \"\",\n    postsCounter: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_POST: {\n            let newPost = {\n                id: state.postsCounter++,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: \"\"\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        case SAVE_PHOTOS: {\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTOS, photos});\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await profileAPI.profile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async(dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if(response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\nexport const savePhoto = (photoFile) => async(dispatch) => {\n    let response = await profileAPI.savePhoto(photoFile);\n    if(response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n};\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n    messagesData: [],\n    dialogsData: [\n        {id: 1, name: 'Julia', avatar: \"https://scontent.fiev9-1.fna.fbcdn.net/v/t31.0-8/18527165_108062213108020_5142657843914753339_o.jpg?_nc_cat=102&_nc_oc=AQmBFYmlYF-hNp0nj6XaFpdS170Qy3gDU7UyUl20F_trXB-two3-rQNxfM82L5nPNLI&_nc_ht=scontent.fiev9-1.fna&oh=5eb537986c2c1eb0ff98d0eb6c811f74&oe=5E871397\"},\n        {id: 2, name: 'Leo', avatar: \"https://scontent.fiev9-1.fna.fbcdn.net/v/t1.0-9/69204180_913385035661609_6653158427474264064_o.jpg?_nc_cat=104&_nc_oc=AQkf--n1m7G-v5Hl81hdjDnShZ7go1ACiOz13D_1vj75MVg7-E-lOPP8KTzKXzkCeek&_nc_ht=scontent.fiev9-1.fna&oh=37d65e6660e15ee9a07d860f5b2a5e4d&oe=5E4A9750\"},\n        {id: 3, name: 'Fatima', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/6cc94160aa06908d9dacedd30a76b60a/5E575759/t51.2885-15/sh0.08/e35/s750x750/67780439_2640105096013963_5656727610121398827_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=107\"},\n        {id: 4, name: 'Ramin', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/76a0f0e416adc85d8cf9aabfdec29e73/5E58536B/t51.2885-15/sh0.08/e35/p640x640/66107413_511656199584714_6838401202735629629_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=106\"},\n        {id: 5, name: 'Terry', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/2fad656281839ed604238c2959d14a97/5E5079AD/t51.2885-15/e35/13381346_689645064507947_137065777_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=111\"},\n        {id: 6, name: 'Gerrard', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/3096af97282a8d75ddcf8669e732a976/5E47EACF/t51.2885-15/sh0.08/e35/p750x750/73317997_121199169311357_8433565016245429815_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=105\"}\n    ]\n};\n\nconst dialogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let body = action.newMessageText;\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {id: 5, message: body}]\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const addMessageCreator = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\n\nexport default dialogReducer;","\nexport const updateObjectsInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if(u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {followAPI, usersAPI} from \"../api/api\";\nimport {updateObjectsInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\nconst TOGGLE_FETCHING= 'TOGGLE-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        }\n        case TOGGLE_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_COUNT, count})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(setFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(setFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n};\n\n// FOLLOW UNFOLLOW\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if(response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), followSuccess);\n    }\n};\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), unfollowSuccess);\n    }\n};\n\nexport default usersReducer;"],"sourceRoot":""}