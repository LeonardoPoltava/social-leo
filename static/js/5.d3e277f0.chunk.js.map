{"version":3,"sources":["components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","error","touched","children","hasError","className","Textarea","props","restProps","Input","customField","placeholder","name","validators","component","fieldClass","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","to","src","avatar","alt","Message","message","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","cols","rows","Dialogs","state","messagesPage","dialogsElement","dialogsData","map","d","key","messagesElement","messagesData","m","values","addMessage","messageArea","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","newMessageText","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.d3e277f0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FormsControls.css\";\nimport {Field} from \"redux-form\";\nconst FormControl = ({input, meta: {error, touched}, children, ...props} ) => {\n    const hasError = error && touched;\n    return (\n        <div className={\"form-control \" + (hasError ? \"error\" : \"\")}>\n            {children}\n            {hasError && <span className={\"error-span\"}>{error}</span>}\n        </div>\n    )\n};\nexport const Textarea = (props) => {\n    const {input, meta,  ...restProps } = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n};\nexport const Input = (props) => {\n    const {input, meta, ...restProps } = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n};\nexport const customField = (placeholder, name, validators, component, fieldClass, props  = {}) => (\n    <Field component={component} validate={validators} name={name} placeholder={placeholder} className={fieldClass} {...props} />\n);","export const required = (value) => {\n    if(value) {\n        return undefined;\n    }\n    else {\n        return \"Field is required\";\n    }\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if(value.length > maxLength) {\n        return `Max length is ${maxLength}`;\n    }\n    else {\n        return undefined;\n    }\n}","import React from 'react';\nimport \"./DialogItem.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path =\"/dialogs/\" + props.id;\n    return(\n        <NavLink className=\"dialog\" to={path}>\n            <img src={props.avatar} alt=\"\" className=\"dialog-avatar\"/>\n            <span className=\"dialog-name\">{props.name}</span>\n        </NavLink>\n    )\n};\nexport default DialogItem;","import React from 'react';\nimport \"./Message.css\";\n\nconst Message = (props) => {\n    return(\n        <div className=\"message\">{props.message}</div>\n    )\n};\nexport default Message;","import React from 'react';\nimport \"./Dialogs.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from 'redux-form'\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n    let state = props.messagesPage;\n    // dialogs\n    let dialogsElement = state.dialogsData\n        .map( d => {\n            return <DialogItem avatar={d.avatar} id={d.id} name={d.name} key={d.id} />\n        });\n    // messages\n    let messagesElement = state.messagesData.map( m => {\n        return <Message id={m.id} message={m.message} key={m.id} />\n    });\n    const onSubmit = (values) => {\n        props.addMessage(values.messageArea);\n    };\n    return (\n        <div className=\"dialogs\">\n            <h1>Dialogs</h1>\n            <div className=\"dialogs-content\">\n                <div className=\"dialogs-list\">\n                    {dialogsElement}\n                </div>\n                <div className=\"messages\">\n                    {messagesElement}\n                    <AddMessageReduxForm onSubmit={onSubmit} />\n                </div>\n            </div>\n        </div>\n    );\n};\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className=\"message-form\">\n            <Field component={Textarea} placeholder={\"Text here..\"} name=\"messageArea\" id=\"message-area\" cols=\"30\" rows=\"10\" validate={[required]}></Field>\n            <button>Add message</button>\n        </form>\n    )\n}\nconst AddMessageReduxForm = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\nexport default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) {\n                return <Redirect to=\"/login/\" />\n            }\n            return <Component {...this.props} />;\n        }\n    }\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedRedirectComponent;\n}","import {addMessageCreator} from \"../../redux/dialog-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageText) => {dispatch(addMessageCreator(newMessageText))}\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n) (Dialogs);"],"sourceRoot":""}