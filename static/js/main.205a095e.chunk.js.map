{"version":3,"sources":["serviceWorker.js","components/Sidebar/Sidebar.jsx","redux/sidebar-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","redux/auth-reducer.js","api/api.js","components/common/preloader/Preloader.jsx","redux/profile-reducer.js","redux/dialog-reducer.js","utils/object-helpers.js","redux/users-reducer.js","images/logo.png"],"names":["Boolean","window","location","hostname","match","Sidebar","className","to","initialState","sidebarReducer","state","initialized","appReducer","action","type","reducers","combineReducers","profilePage","profileReducer","messagesPage","dialogReducer","sidebar","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","props","src","Logo","width","alt","isAuth","login","onClick","getLogoutUserData","HeaderContainer","this","React","Component","connect","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","initializeApp","fallback","Preloader","exact","from","path","component","render","AppContainer","withRouter","dispatch","promise","getAuthUserData","Promise","all","then","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_USER_DATA","GET_CAPTCHA_URL","userId","email","captchaUrl","setAuthUserData","payload","a","authAPI","response","data","resultCode","id","getLoginUserData","password","rememberMe","captcha","getCaptchaUrl","message","messages","length","stopSubmit","_error","logout","getCaptchaUrlSuccess","securityAPI","url","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","followAPI","unfollow","delete","follow","post","profileAPI","profile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","posts","postsCounter","addPostCreator","newPostText","getUserProfile","setStatus","photos","getState","reject","newPost","likesCount","filter","p","postId","messagesData","dialogsData","name","avatar","addMessageCreator","newMessageText","body","updateObjectsInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setFetching","toggleFollowingProgress","requestUsers","page","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed","module","exports"],"mappings":"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","file":"static/js/main.205a095e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Post is cached for offline use.\" message.\n              console.log('Post is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport \"./Sidebar.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Sidebar = () => {\n    return (\n        <nav className=\"nav\">\n            <ul className=\"nav-list\">\n                <li><NavLink to=\"/profile/\">Profile</NavLink></li>\n                <li><NavLink to=\"/dialogs/\">Messages</NavLink></li>\n                <li><NavLink to=\"/news/\">News</NavLink></li>\n                <li><NavLink to=\"/music/\">Music</NavLink></li>\n                <li><NavLink to=\"/settings/\">Settings</NavLink></li>\n                <li><NavLink to=\"/users/\">Find users</NavLink></li>\n            </ul>\n        </nav>\n    );\n}\nexport default  Sidebar;","let initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n};\nexport default sidebarReducer;","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch(action.type){\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    });\n}\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogReducer from \"./dialog-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport Logo from \"../../images/logo.png\";\nimport \"./Header.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <div className=\"flex-space-b flex-center-y\">\n                    <img src={Logo} width={150} alt=\"\"/>\n                    <div className=\"login-box\">\n                        {props.isAuth ?\n                            <div className={\"flex-center-y header-nav\"}><span className=\"user-name\">{props.login}</span> <button onClick={props.getLogoutUserData} className=\"logout\">Logout</button></div> :\n                            <NavLink to=\"/login/\">Login</NavLink>}\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n}\nexport default  Header;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getLogoutUserData} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <>\n            <Header {...this.props} />\n        </>\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {getLogoutUserData})(HeaderContainer);","import React, {Component, Suspense, lazy} from 'react';\nimport './App.css';\nimport Sidebar from \"./components/Sidebar/Sidebar.jsx\";\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport store from \"./redux/redux-store\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\nconst DialogsContainer = lazy(() => import('././components/Dialogs/DialogsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'));\nconst LoginPage = lazy(() => import('./components/Login/LoginContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Sidebar/>\n                <div className=\"content\">\n                    <Suspense fallback={<Preloader/>}>\n                        <Switch>\n                            <Redirect exact from={\"/\"} to={\"/profile/\"} />\n                            <Route exact path=\"/profile/:userId?\" component={ProfileContainer}/>\n                            <Route path=\"/dialogs/\" component={DialogsContainer}/>\n                            <Route path=\"/users/\" component={UsersContainer}/>\n                            <Route path=\"/login/\" component={LoginPage}/>\n                            <Route path=\"*\" render={ () => <div>404 NOT FOUND</div> }/>\n                        </Switch>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter >\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n};\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL = 'social-network/auth/GET_CAPTCHA_URL';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n};\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.auth();\n\n    if(response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const getLoginUserData = (login, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(login, password, rememberMe, captcha);\n\n    if(response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    }\n    else {\n        if(response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages : \"Error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n};\nexport const getLogoutUserData = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if(response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n};\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL, payload: {captchaUrl}});\nexport const getCaptchaUrl = () => async (dispatch) => {\n    let response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n};\n\nexport default authReducer;","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"edd374dd-87c3-43d5-9f84-18ff67372711\"\n    }\n});\nexport const usersAPI = {\n    getUsers(currentPage = 1 , pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    }\n};\nexport const followAPI = {\n    unfollow(id) {\n        return instance.delete(`follow/${id}`);\n    },\n    follow(id) {\n        return instance.post(`follow/${id}`);\n    }\n};\nexport const authAPI = {\n    auth() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n};\nexport const profileAPI = {\n    profile(id) {\n        return instance.get(`profile/${id}`)\n    },\n    getStatus(id) {\n        return instance.get(`profile/status/${id}`)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status})\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n        return instance.put(`profile/photo/`, formData, {headers: {\n                \"Content-type\": \"multipart/form-data\"\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile/`, profile);\n    }\n};\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n}","import React from 'react';\nimport \"./Preloader.css\";\n\nlet Preloader = (props) => {\n    return <>\n        <div className=\"shadow\"></div>\n        <img alt=\"\" className=\"loading\" src=\"https://icon-library.net/images/ajax-loading-icon/ajax-loading-icon-11.jpg\" />\n    </>\n}\nexport default Preloader;","import {profileAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst SAVE_PHOTOS = 'SAVE_PHOTOS';\n\nlet initialState = {\n    posts: [],\n    profile: null,\n    status: \"\",\n    postsCounter: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_POST: {\n            let newPost = {\n                id: state.postsCounter++,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: \"\"\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        case SAVE_PHOTOS: {\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTOS, photos});\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await profileAPI.profile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async(dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if(response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\nexport const savePhoto = (photoFile) => async(dispatch) => {\n    let response = await profileAPI.savePhoto(photoFile);\n    if(response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n};\nexport const saveProfile = (profile) => async(dispatch, getState) => {\n    const userId = getState().auth.userId;\n    let response = await profileAPI.saveProfile(profile);\n    if(response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    }\n    else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\n        return Promise.reject(response.data.messages[0]);\n    }\n};\n\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n    messagesData: [],\n    dialogsData: [\n        {id: 1, name: 'Julia', avatar: \"https://scontent.fiev9-1.fna.fbcdn.net/v/t31.0-8/18527165_108062213108020_5142657843914753339_o.jpg?_nc_cat=102&_nc_oc=AQmBFYmlYF-hNp0nj6XaFpdS170Qy3gDU7UyUl20F_trXB-two3-rQNxfM82L5nPNLI&_nc_ht=scontent.fiev9-1.fna&oh=5eb537986c2c1eb0ff98d0eb6c811f74&oe=5E871397\"},\n        {id: 2, name: 'Leo', avatar: \"https://scontent.fiev9-1.fna.fbcdn.net/v/t1.0-9/69204180_913385035661609_6653158427474264064_o.jpg?_nc_cat=104&_nc_oc=AQkf--n1m7G-v5Hl81hdjDnShZ7go1ACiOz13D_1vj75MVg7-E-lOPP8KTzKXzkCeek&_nc_ht=scontent.fiev9-1.fna&oh=37d65e6660e15ee9a07d860f5b2a5e4d&oe=5E4A9750\"},\n        {id: 3, name: 'Fatima', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/6cc94160aa06908d9dacedd30a76b60a/5E575759/t51.2885-15/sh0.08/e35/s750x750/67780439_2640105096013963_5656727610121398827_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=107\"},\n        {id: 4, name: 'Ramin', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/76a0f0e416adc85d8cf9aabfdec29e73/5E58536B/t51.2885-15/sh0.08/e35/p640x640/66107413_511656199584714_6838401202735629629_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=106\"},\n        {id: 5, name: 'Terry', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/2fad656281839ed604238c2959d14a97/5E5079AD/t51.2885-15/e35/13381346_689645064507947_137065777_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=111\"},\n        {id: 6, name: 'Gerrard', avatar: \"https://instagram.fiev9-1.fna.fbcdn.net/vp/3096af97282a8d75ddcf8669e732a976/5E47EACF/t51.2885-15/sh0.08/e35/p750x750/73317997_121199169311357_8433565016245429815_n.jpg?_nc_ht=instagram.fiev9-1.fna.fbcdn.net&_nc_cat=105\"}\n    ]\n};\n\nconst dialogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let body = action.newMessageText;\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {id: 5, message: body}]\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const addMessageCreator = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\n\nexport default dialogReducer;","\nexport const updateObjectsInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if(u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {followAPI, usersAPI} from \"../api/api\";\nimport {updateObjectsInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\nconst TOGGLE_FETCHING= 'TOGGLE-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        }\n        case TOGGLE_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_COUNT, count})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(setFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(setFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n};\n\n// FOLLOW UNFOLLOW\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if(response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), followSuccess);\n    }\n};\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), unfollowSuccess);\n    }\n};\n\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/logo.a93f6632.png\";"],"sourceRoot":""}