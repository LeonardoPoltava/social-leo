{"version":3,"sources":["components/common/FormsControls/FormsControls.js","utils/validators/validators.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","error","touched","children","hasError","className","Textarea","props","restProps","Input","customField","placeholder","name","validators","component","fieldClass","validate","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","event","currentTarget","onBlur","updateStatus","type","ProfileInfo","profile","src","photos","large","alt","fullName","Preloader","Post","id","width","height","message","href","likeCounter","maxLength10","MyPosts","React","memo","postsElement","posts","map","p","key","likesCount","AddPostReduxForm","onSubmit","values","addPost","postArea","reduxForm","form","handleSubmit","Field","cols","rows","MyPostsContainer","connect","state","profilePage","dispatch","newPostText","addPostCreator","Profile","store","ProfileContainerAPI","userId","this","match","params","currentUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.1cb572a9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FormsControls.css\";\nimport {Field} from \"redux-form\";\nconst FormControl = ({input, meta: {error, touched}, children, ...props} ) => {\n    const hasError = error && touched;\n    return (\n        <div className={\"form-control \" + (hasError ? \"error\" : \"\")}>\n            {children}\n            {hasError && <span className={\"error-span\"}>{error}</span>}\n        </div>\n    )\n};\nexport const Textarea = (props) => {\n    const {input, meta,  ...restProps } = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n};\nexport const Input = (props) => {\n    const {input, meta, ...restProps } = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n};\nexport const customField = (placeholder, name, validators, component, fieldClass, props  = {}) => (\n    <Field component={component} validate={validators} name={name} placeholder={placeholder} className={fieldClass} {...props} />\n);","export const required = (value) => {\n    if(value) {\n        return undefined;\n    }\n    else {\n        return \"Field is required\";\n    }\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if(value.length > maxLength) {\n        return `Max length is ${maxLength}`;\n    }\n    else {\n        return undefined;\n    }\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useState, useEffect} from \"react\";\n\nconst ProfileStatusHooks = (props) => {\n    let [editMode,setEditMode] = useState(false);\n    let [status,setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateMode = () => {\n        setEditMode(true);\n    };\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n    const onStatusChange =  (event) => {\n        setStatus(event.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {!editMode && <span onDoubleClick={activateMode} className=\"profile-status\">{props.status || \"No status\"}</span>}\n            {editMode &&\n            <input\n                autoFocus={true}\n                onChange={onStatusChange}\n                onBlur={deactivateEditMode}\n                type=\"text\"\n                value={status}\n                className=\"profile-status-input\"\n            />}\n        </div>\n    )\n}\nexport default ProfileStatusHooks;","import React from 'react';\nimport \"./ProfileInfo.css\";\nimport Preloader from \"../../common/preloader/Preloader\";\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if(!profile) {\n        return <Preloader/>\n    }\n    else {\n        return (\n            <div className=\"\">\n                <h1>Profile</h1>\n                <div className=\"description\">\n                    <img src={profile.photos.large ? profile.photos.large : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSwuab-TXFNmiH1vzYJx_Oo7Dtxe0XtogHfy1hZwRHPx5Y4EOvS&s\"} alt=\"\" className=\"avatar\"/>\n                    <div className=\"profile-info-box\">\n                        <span className=\"profile-name\">{profile.fullName}</span>\n                        <ProfileStatusHooks status={status} updateStatus={updateStatus} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ProfileInfo;","import React from 'react';\nimport \"./Post.css\";\nconst Post = (props) => {\n    return (\n        <div className=\"post\" id={props.id}>\n            <img src=\"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\" alt=\"\" width={50} height={50} className=\"post-avatar\"/>\n            <span className=\"post-name\">{props.name}</span>\n            <span className=\"post-text\">{props.message}</span>\n            <a href=\"/\" className=\"post-like\">Like</a>\n            <span className=\"like-counter\">({props.likeCounter})</span>\n        </div>\n    );\n}\nexport default Post;","import React from 'react';\nimport \"./MyPosts.css\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo(props => {\n    let postsElement =\n        props.posts.map(p => <Post id={p.id} key={p.id} message={p.message} likeCounter={p.likesCount}/>);\n\n    let onSubmit = (values) => {\n        props.addPost(values.postArea);\n    };\n    return (\n        <div className=\"posts\">\n            <h2>My posts</h2>\n            <AddPostReduxForm onSubmit={onSubmit}/>\n            {postsElement}\n        </div>\n    );\n});\n\nconst postForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className=\"posts-form\">\n            <Field\n                component={Textarea}\n                placeholder={\"Type your message here..\"}\n                name=\"postArea\"\n                id=\"post-area\"\n                cols=\"30\"\n                rows=\"10\"\n                validate={[required, maxLength10]}\n            >\n            </Field>\n            <button>Add post</button>\n        </form>\n    )\n};\nconst AddPostReduxForm = reduxForm({\n    form: 'postsAddMessageForm'\n})(postForm);\nexport default MyPosts;","\nimport {addPostCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {dispatch(addPostCreator(newPostText))}\n    }\n};\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","import React from 'react';\nimport \"./Profile.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div className=\"profile\">\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <MyPostsContainer store={props.store} />\n        </div>\n    );\n}\nexport default Profile;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainerAPI extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) {\n            userId = this.props.currentUserId;\n            if(!userId) {\n                this.props.history.push(\"/login/\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        currentUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n};\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n) (ProfileContainerAPI);"],"sourceRoot":""}