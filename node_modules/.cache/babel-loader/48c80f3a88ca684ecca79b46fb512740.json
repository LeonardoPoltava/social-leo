{"ast":null,"code":"import _defineProperty from \"/home/vladyslav/projects/react_social_git/social-leo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { followAPI, usersAPI } from \"../api/api\";\nimport { updateObjectsInArray } from \"../utils/object-helpers\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\nconst TOGGLE_FETCHING = 'TOGGLE-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: updateObjectsInArray(state.users, action.userId, \"id\", {\n          followed: true\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: updateObjectsInArray(state.users, action.userId, \"id\", {\n          followed: false\n        })\n      });\n\n    case SET_USERS:\n      {\n        return _objectSpread({}, state, {\n          users: action.users\n        });\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case SET_TOTAL_COUNT:\n      {\n        return _objectSpread({}, state, {\n          totalUsersCount: action.count\n        });\n      }\n\n    case TOGGLE_FETCHING:\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_COUNT,\n  count\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setFetching = isFetching => ({\n  type: TOGGLE_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(setFetching(true));\n    dispatch(setCurrentPage(page));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(setFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n}; // FOLLOW UNFOLLOW\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), followSuccess);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), unfollowSuccess);\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/home/vladyslav/projects/react_social_git/social-leo/src/redux/users-reducer.js"],"names":["followAPI","usersAPI","updateObjectsInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","count","filter","id","followSuccess","unfollowSuccess","setUsers","setTotalUsersCount","setCurrentPage","setFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","response","resultCode","follow","bind","unfollow"],"mappings":"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","sourcesContent":["import {followAPI, usersAPI} from \"../api/api\";\nimport {updateObjectsInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\nconst TOGGLE_FETCHING= 'TOGGLE-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        }\n        case TOGGLE_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_COUNT, count})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(setFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(setFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n};\n\n// FOLLOW UNFOLLOW\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if(response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), followSuccess);\n    }\n};\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), unfollowSuccess);\n    }\n};\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}