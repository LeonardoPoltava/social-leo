{"ast":null,"code":"import _classCallCheck from\"/home/vladyslav/projects/react_social_git/social-leo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vladyslav/projects/react_social_git/social-leo/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/vladyslav/projects/react_social_git/social-leo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/vladyslav/projects/react_social_git/social-leo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/vladyslav/projects/react_social_git/social-leo/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from\"react-redux\";import Profile from\"./Profile\";import{getUserProfile,getStatus,updateStatus}from\"../../redux/profile-reducer\";import{withRouter}from\"react-router-dom\";import{compose}from\"redux\";var ProfileContainerAPI=/*#__PURE__*/function(_React$Component){_inherits(ProfileContainerAPI,_React$Component);function ProfileContainerAPI(){_classCallCheck(this,ProfileContainerAPI);return _possibleConstructorReturn(this,_getPrototypeOf(ProfileContainerAPI).apply(this,arguments));}_createClass(ProfileContainerAPI,[{key:\"componentDidMount\",value:function componentDidMount(){var userId=this.props.match.params.userId;if(!userId){userId=this.props.currentUserId;if(!userId){this.props.history.push(\"/login/\");}}this.props.getUserProfile(userId);this.props.getStatus(userId);}},{key:\"render\",value:function render(){return React.createElement(Profile,Object.assign({},this.props,{profile:this.props.profile,status:this.props.status,updateStatus:this.props.updateStatus}));}}]);return ProfileContainerAPI;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{profile:state.profilePage.profile,status:state.profilePage.status,currentUserId:state.auth.userId,isAuth:state.auth.isAuth};};export default compose(connect(mapStateToProps,{getUserProfile:getUserProfile,getStatus:getStatus,updateStatus:updateStatus}),withRouter)(ProfileContainerAPI);","map":{"version":3,"sources":["/home/vladyslav/projects/react_social_git/social-leo/src/components/Profile/ProfileContainer.jsx"],"names":["React","connect","Profile","getUserProfile","getStatus","updateStatus","withRouter","compose","ProfileContainerAPI","userId","props","match","params","currentUserId","history","push","profile","status","Component","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":"irBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,cAAR,CAAwBC,SAAxB,CAAmCC,YAAnC,KAAsD,6BAAtD,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,OAAQC,OAAR,KAAsB,OAAtB,C,GAEMC,CAAAA,mB,mWACkB,CAChB,GAAIC,CAAAA,MAAM,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC,CACA,GAAG,CAACA,MAAJ,CAAY,CACRA,MAAM,CAAG,KAAKC,KAAL,CAAWG,aAApB,CACA,GAAG,CAACJ,MAAJ,CAAY,CACR,KAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB,EACH,CACJ,CACD,KAAKL,KAAL,CAAWP,cAAX,CAA0BM,MAA1B,EACA,KAAKC,KAAL,CAAWN,SAAX,CAAqBK,MAArB,EACH,C,uCACQ,CACL,MAAO,qBAAC,OAAD,kBAAa,KAAKC,KAAlB,EAAyB,OAAO,CAAE,KAAKA,KAAL,CAAWM,OAA7C,CAAsD,MAAM,CAAE,KAAKN,KAAL,CAAWO,MAAzE,CAAiF,YAAY,CAAE,KAAKP,KAAL,CAAWL,YAA1G,GAAP,CACH,C,iCAd6BL,KAAK,CAACkB,S,EAiBxC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHJ,OAAO,CAAEI,KAAK,CAACC,WAAN,CAAkBL,OADxB,CAEHC,MAAM,CAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFvB,CAGHJ,aAAa,CAAEO,KAAK,CAACE,IAAN,CAAWb,MAHvB,CAIHc,MAAM,CAAEH,KAAK,CAACE,IAAN,CAAWC,MAJhB,CAAP,CAMH,CAPD,CAQA,cAAehB,CAAAA,OAAO,CAClBN,OAAO,CAACkB,eAAD,CAAkB,CAAChB,cAAc,CAAdA,cAAD,CAAiBC,SAAS,CAATA,SAAjB,CAA4BC,YAAY,CAAZA,YAA5B,CAAlB,CADW,CAElBC,UAFkB,CAAP,CAGZE,mBAHY,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainerAPI extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) {\n            userId = this.props.currentUserId;\n            if(!userId) {\n                this.props.history.push(\"/login/\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        currentUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n};\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n) (ProfileContainerAPI);"]},"metadata":{},"sourceType":"module"}