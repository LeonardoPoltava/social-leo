{"ast":null,"code":"var _jsxFileName = \"/home/vladyslav/projects/react_social_git/social-leo/src/hoc/withAuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        return React.createElement(Redirect, {\n          to: \"/login/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedRedirectComponent;\n};","map":{"version":3,"sources":["/home/vladyslav/projects/react_social_git/social-leo/src/hoc/withAuthRedirect.js"],"names":["React","Redirect","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props","ConnectedRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAGA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAG,CAAC,KAAKC,KAAL,CAAWN,MAAf,EAAuB;AACnB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO,oBAAC,SAAD,oBAAe,KAAKM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAN2C;;AAQhD,MAAIC,0BAA0B,GAAGV,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAAjC;AACA,SAAOG,0BAAP;AACH,CAXM","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) {\n                return <Redirect to=\"/login/\" />\n            }\n            return <Component {...this.props} />;\n        }\n    }\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedRedirectComponent;\n}"]},"metadata":{},"sourceType":"module"}