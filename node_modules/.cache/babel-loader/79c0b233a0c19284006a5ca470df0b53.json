{"ast":null,"code":"import _defineProperty from \"/home/vladyslav/projects/react_social_git/social-leo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nlet initialState = {\n  posts: [],\n  profile: null,\n  status: \"\",\n  postsCounter: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: state.postsCounter++,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return _objectSpread({}, state, {\n          posts: [...state.posts, newPost],\n          newPostText: \"\"\n        });\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread({}, state, {\n          posts: state.posts.filter(p => p.id !== action.postId)\n        });\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const addPostCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUserProfile = userId => async dispatch => {\n  let response = await profileAPI.profile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/vladyslav/projects/react_social_git/social-leo/src/redux/profile-reducer.js"],"names":["profileAPI","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","profile","status","postsCounter","profileReducer","state","action","type","newPost","id","message","newPostText","likesCount","filter","p","postId","addPostCreator","deletePost","setUserProfile","getUserProfile","userId","dispatch","response","data","setStatus","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\n\nlet initialState = {\n    posts: [],\n    profile: null,\n    status: \"\",\n    postsCounter: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_POST: {\n            let newPost = {\n                id: state.postsCounter++,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: \"\"\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await profileAPI.profile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async(dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if(response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}