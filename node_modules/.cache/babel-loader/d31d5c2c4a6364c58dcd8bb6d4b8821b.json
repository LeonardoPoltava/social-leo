{"ast":null,"code":"import React from'react';import\"./Dialogs.css\";import DialogItem from\"./DialogItem/DialogItem\";import Message from\"./Message/Message\";import{Field,reduxForm}from'redux-form';import{Textarea}from\"../common/FormsControls/FormsControls\";import{required}from\"../../utils/validators/validators\";var Dialogs=function Dialogs(props){var state=props.messagesPage;// dialogs\nvar dialogsElement=state.dialogsData.map(function(d){return React.createElement(DialogItem,{avatar:d.avatar,id:d.id,name:d.name,key:d.id});});// messages\nvar messagesElement=state.messagesData.map(function(m){return React.createElement(Message,{id:m.id,message:m.message,key:m.id});});var onSubmit=function onSubmit(values){props.addMessage(values.messageArea);};return React.createElement(\"div\",{className:\"dialogs\"},React.createElement(\"h1\",null,\"Dialogs\"),React.createElement(\"div\",{className:\"dialogs-content\"},React.createElement(\"div\",{className:\"dialogs-list\"},dialogsElement),React.createElement(\"div\",{className:\"messages\"},messagesElement,React.createElement(AddMessageReduxForm,{onSubmit:onSubmit}))));};var AddMessageForm=function AddMessageForm(props){return React.createElement(\"form\",{onSubmit:props.handleSubmit,className:\"message-form\"},React.createElement(Field,{component:Textarea,placeholder:\"Text here..\",name:\"messageArea\",id:\"message-area\",cols:\"30\",rows:\"10\",validate:[required]}),React.createElement(\"button\",null,\"Add message\"));};var AddMessageReduxForm=reduxForm({form:'dialogAddMessageForm'})(AddMessageForm);export default Dialogs;","map":{"version":3,"sources":["/home/vladyslav/projects/react_social_git/social-leo/src/components/Dialogs/Dialogs.jsx"],"names":["React","DialogItem","Message","Field","reduxForm","Textarea","required","Dialogs","props","state","messagesPage","dialogsElement","dialogsData","map","d","avatar","id","name","messagesElement","messagesData","m","message","onSubmit","values","addMessage","messageArea","AddMessageForm","handleSubmit","AddMessageReduxForm","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,QAAR,KAAuB,uCAAvB,CACA,OAAQC,QAAR,KAAuB,mCAAvB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvB,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,YAAlB,CACA;AACA,GAAIC,CAAAA,cAAc,CAAGF,KAAK,CAACG,WAAN,CAChBC,GADgB,CACX,SAAAC,CAAC,CAAI,CACP,MAAO,qBAAC,UAAD,EAAY,MAAM,CAAEA,CAAC,CAACC,MAAtB,CAA8B,EAAE,CAAED,CAAC,CAACE,EAApC,CAAwC,IAAI,CAAEF,CAAC,CAACG,IAAhD,CAAsD,GAAG,CAAEH,CAAC,CAACE,EAA7D,EAAP,CACH,CAHgB,CAArB,CAIA;AACA,GAAIE,CAAAA,eAAe,CAAGT,KAAK,CAACU,YAAN,CAAmBN,GAAnB,CAAwB,SAAAO,CAAC,CAAI,CAC/C,MAAO,qBAAC,OAAD,EAAS,EAAE,CAAEA,CAAC,CAACJ,EAAf,CAAmB,OAAO,CAAEI,CAAC,CAACC,OAA9B,CAAuC,GAAG,CAAED,CAAC,CAACJ,EAA9C,EAAP,CACH,CAFqB,CAAtB,CAGA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAY,CACzBf,KAAK,CAACgB,UAAN,CAAiBD,MAAM,CAACE,WAAxB,EACH,CAFD,CAGA,MACI,4BAAK,SAAS,CAAC,SAAf,EACI,wCADJ,CAEI,2BAAK,SAAS,CAAC,iBAAf,EACI,2BAAK,SAAS,CAAC,cAAf,EACKd,cADL,CADJ,CAII,2BAAK,SAAS,CAAC,UAAf,EACKO,eADL,CAEI,oBAAC,mBAAD,EAAqB,QAAQ,CAAEI,QAA/B,EAFJ,CAJJ,CAFJ,CADJ,CAcH,CA5BD,CA6BA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAClB,KAAD,CAAW,CAC9B,MACI,6BAAM,QAAQ,CAAEA,KAAK,CAACmB,YAAtB,CAAoC,SAAS,CAAC,cAA9C,EACI,oBAAC,KAAD,EAAO,SAAS,CAAEtB,QAAlB,CAA4B,WAAW,CAAE,aAAzC,CAAwD,IAAI,CAAC,aAA7D,CAA2E,EAAE,CAAC,cAA9E,CAA6F,IAAI,CAAC,IAAlG,CAAuG,IAAI,CAAC,IAA5G,CAAiH,QAAQ,CAAE,CAACC,QAAD,CAA3H,EADJ,CAEI,gDAFJ,CADJ,CAMH,CAPD,CAQA,GAAMsB,CAAAA,mBAAmB,CAAGxB,SAAS,CAAC,CAClCyB,IAAI,CAAE,sBAD4B,CAAD,CAAT,CAEzBH,cAFyB,CAA5B,CAGA,cAAenB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport \"./Dialogs.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from 'redux-form'\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n    let state = props.messagesPage;\n    // dialogs\n    let dialogsElement = state.dialogsData\n        .map( d => {\n            return <DialogItem avatar={d.avatar} id={d.id} name={d.name} key={d.id} />\n        });\n    // messages\n    let messagesElement = state.messagesData.map( m => {\n        return <Message id={m.id} message={m.message} key={m.id} />\n    });\n    const onSubmit = (values) => {\n        props.addMessage(values.messageArea);\n    };\n    return (\n        <div className=\"dialogs\">\n            <h1>Dialogs</h1>\n            <div className=\"dialogs-content\">\n                <div className=\"dialogs-list\">\n                    {dialogsElement}\n                </div>\n                <div className=\"messages\">\n                    {messagesElement}\n                    <AddMessageReduxForm onSubmit={onSubmit} />\n                </div>\n            </div>\n        </div>\n    );\n};\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className=\"message-form\">\n            <Field component={Textarea} placeholder={\"Text here..\"} name=\"messageArea\" id=\"message-area\" cols=\"30\" rows=\"10\" validate={[required]}></Field>\n            <button>Add message</button>\n        </form>\n    )\n}\nconst AddMessageReduxForm = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}